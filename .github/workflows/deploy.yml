name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
          java-version: '17'
          distribution: 'temurin'

    # gradlew 권한 설정
    - name: Set gradlew permissions
      run: |
        chmod +x ./gradlew

    # gradle 빌드
    - name: Build with Gradle
      run: ./gradlew build

    - name: Set SSH key permissions
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}


    - name: Add known_hosts
      run: |
        ssh-keyscan -t ed25519 13.125.86.33 >> ~/.ssh/known_hosts
    
    #- name: 기존프로세스 종료
    #  run: |
    #    kill -9 $(ps -ef | grep devops | grep -v grep | head -n 1 | awk '{print $2}') || true
    - name: Build Docker image
      run: docker build -t myapp:latest .

    - name: Save Docker image as tar
      run: docker save myapp:latest -o myapp.tar

    - name: Deploy to Server with rsync
      run: | 
         rsync -avz -e "ssh -o StrictHostKeyChecking=no" myapp.tar ubuntu@13.125.86.33:~/app


    - name: Run SSH commands
      run: |
        ssh -i ~/.ssh/id_ed25519 ubuntu@13.125.86.33 << 'EOF'
          docker stop myapp || true
          docker rm myapp || true
          docker load -i ~/app/myapp.tar
          docker run -d --name myapp -p 8080:8080 myapp:latest
        EOF
